
    SOBRE SQL


O SQL (Structured Query Language - literalmente traduzido por: "Linguage de Busca Estruturada") 
é uma linguagem de programação padronizada usada para gerenciar e manipular bancos de dados re-
lacionais. 

Ela permite aos usuários executar diversas operações, como inserir, atualizar, excluir e recu-
perar dados de um banco de dados. Além disso, o SQL também é usado para definir e manipular a 
estrutura do banco de dados, como tabelas, índices, procedimentos armazenados e muito mais.

O SQL teve origem no início da década de 1970, quando pesquisadores da IBM desenvolveram a lin-
guagem SEQUEL (Structured English Query Language). Posteriormente, foi renomeada para SQL e 
tornou-se uma linguagem padrão amplamente adotada na indústria de bancos de dados relacionais.

O SQL é dividido em 4 partes prioritárias:

    * DML (Data Manipulation Language):
        Essa parte do SQL define as regras de manipulação dos dados dentro de uma tabela SQL.
        É nessa parte que se encontra o conceito muito conhecido de CRUD (CREATE, READ, UPDATE
        e DELETE), que nada mais é do que os comandos de inserção, seleção, leitura, apagar e 
        etc.
        É nela que usamos os comando SQL como: INSERT, DELETE, SELECT, UPDATE e outros.

    * DDL (Data Definition Language):
        Essa parte define as regras de manipulação dos esquemas (schemas) ou tabelas do BD.
        Enquando o DML se preocupa com a manipulação de dados, o DDL trabalha com toda a estru-
        tura das tabelas.
        Por exemplo é nela que encontramos comandos como: ALTER, CREATE e DROP, comandos que 
        geram mudanças em toda uma tabela, sendo capazes de gerar alterações drásticas na for-
        ma como as tabelas estão estruturadas.

    * DCL (Data Control Language):
        Essa parte define como será feito o controle dos dados em relação aos seus usuários.
        É ela que diz quem pode fazer alterações, quem pode ver determinado esquema ou não, 
        quem pode fazer inserções ou deletar dados.
        Geralmente quem faz uso dessa parte são os administradores do BD, aqui usa-se comandos
        como: GRANT (Conceder), DENY ou REVOKE.

    * TCL (Transation Control Language):
        Essa parte define comandos transacionais que precisam ser feitos em conjunto para se-
        guir as regras de negócio da aplicação. Um bom exemplo disso são transações de banco,
        transações de banco geralmente seguem uma série de execuções que precisam ser feitas
        em conjunto, por exemplo, ao mesmo tempo que o dinheiro entra numa conta ele precisa
        sair de outra e ambos usuários precisam ser notificados.
        Os comandos do TCL servem para esse tipo de transações. Comandos geralmente usados no
        TCL são: BEGIN TRANS, COMMIT TRANS, ROLLBACK e outros.


Vários SGBDs (Sistemas de Gerenciamento de Banco de Dados) utilizam o SQL como linguagem de 
consulta. Alguns exemplos populares incluem:

    * MySQL: 
        Um SGBD relacional de código aberto que utiliza SQL como linguagem principal para con-
        sulta e manipulação de dados.

    * PostgreSQL: 
        Outro SGBD relacional de código aberto que suporta SQL e oferece uma ampla gama de re-
        cursos avançados.

    * Oracle Database: 
        Um SGBD relacional comercial que também utiliza SQL como linguagem principal.

    * Microsoft SQL Server: 
        Desenvolvido pela Microsoft, é um SGBD relacional que suporta SQL e é amplamente utili-
        zado em ambientes corporativos.


SOBRE BANCOS NoSQL:
Por outro lado, os bancos de dados NoSQL (Not Only SQL) surgiram como uma alternativa aos bancos 
de dados relacionais tradicionais. Enquanto o SQL é estruturado em torno de um modelo de dados 
tabular (tabelas relacionais), o NoSQL abrange uma variedade de modelos de dados diferentes, in-
cluindo documentos, chave-valor, colunas e grafos.

A principal diferença entre SQL e NoSQL reside no modelo de dados que cada um suporta. Enquanto 
o SQL é ideal para dados estruturados e relacionais, o NoSQL é mais adequado para dados semies-
truturados ou não estruturados e cenários em que a escalabilidade e a flexibilidade são priori-
dades. Os bancos de dados NoSQL, como MongoDB, Cassandra e Redis, não utilizam SQL como lingua-
gem de consulta principal, optando por linguagens específicas de cada banco de dados para mani-
pular e consultar os dados.